//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeBinder.JavaScript.NAPI {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CodeBinder.JavaScript.NAPI.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * SPDX-FileCopyrightText: (C) 2023 Francesco Pretto &lt;ceztko@gmail.com&gt;
        /// * SPDX-License-Identifier: MIT-0
        /// */
        ///
        ///#ifdef _WIN32
        ///#define WIN32_LEAN_AND_MEAN
        ///#include &lt;Windows.h&gt;
        ///
        ///#define LOAD_SYMBOL(module, symbol) js::symbol = (decltype(::symbol)*)GetProcAddress(module, #symbol)
        ///#else
        ///#include &lt;dlfcn.h&gt;
        ///#define LOAD_SYMBOL(module, symbol) js::symbol = (decltype(::symbol)*)dlsym(module, #symbol)
        ///#endif
        ///
        ///namespace
        ///{
        ///    struct Init
        ///    {
        ///        Init();
        ///    };
        ///}
        ///
        ///static Init s_init;
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JSInterop_cpp {
            get {
                return ResourceManager.GetString("JSInterop_cpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * SPDX-FileCopyrightText: (C) 2023 Francesco Pretto &lt;ceztko@gmail.com&gt;
        /// * SPDX-License-Identifier: MIT-0
        /// */
        ///
        ///#pragma once
        ///
        ///#include &lt;cassert&gt;
        ///#include &lt;cstring&gt;
        ///#include &lt;vector&gt;
        ///#include &lt;type_traits&gt;
        ///
        ///#define BUILDING_NODE_EXTENSION
        ///#include &lt;node_api.h&gt;
        ///
        ///#include &quot;JSNAPI.h&quot;
        ///
        ///#include &lt;CBInterop.hpp&gt;
        ///
        ///#ifdef DEFINE_NAPI_SYMBOLS
        ///#define DECLARE_SYMBOL(symbol) decltype(::symbol)* symbol
        ///#else
        ///#define DECLARE_SYMBOL(symbol) extern decltype(::symbol)* symbol
        ///#endif
        ///
        ///// https://a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JSInterop_h {
            get {
                return ResourceManager.GetString("JSInterop_h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///
        ///#define BUILDING_NODE_EXTENSION
        ///#include &lt;node_api.h&gt;
        ///.
        /// </summary>
        internal static string JSNAPI_h {
            get {
                return ResourceManager.GetString("JSNAPI_h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * SPDX-FileCopyrightText: (C) 2023 Francesco Pretto &lt;ceztko@gmail.com&gt;
        /// * SPDX-License-Identifier: MIT-0
        /// */
        ///
        ///#include &quot;NAPIBinderUtils.h&quot;
        ///#include &quot;JSInterop.h&quot;
        ///
        ///namespace js
        ///{
        ///    extern &quot;C&quot; napi_value NAPI_CreateNativeHandle(
        ///        napi_env env, napi_callback_info info)
        ///    {
        ///        napi_status status;
        ///        size_t argc = 1;
        ///        napi_value args[1];
        ///        status = napi_get_cb_info(env, info, &amp;argc, args, nullptr, nullptr);
        ///        assert(status == napi_ok);
        ///
        ///        napi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAPIBinderUtils_cpp {
            get {
                return ResourceManager.GetString("NAPIBinderUtils_cpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * SPDX-FileCopyrightText: (C) 2023 Francesco Pretto &lt;ceztko@gmail.com&gt;
        /// * SPDX-License-Identifier: MIT-0
        /// */
        ///
        ///#include &quot;JSNAPI.h&quot;
        ///
        ///namespace js
        ///{
        ///    extern &quot;C&quot; napi_value NAPI_CreateNativeHandle(
        ///        napi_env env, napi_callback_info info);
        ///
        ///    extern &quot;C&quot; napi_value NAPI_CreateWeakNativeHandle(
        ///        napi_env env, napi_callback_info info);
        ///
        ///    extern &quot;C&quot; napi_value NAPI_FreeNativeHandle(
        ///        napi_env env, napi_callback_info info);
        ///
        ///    extern &quot;C&quot; napi_value NAPI_NativeHand [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAPIBinderUtils_h {
            get {
                return ResourceManager.GetString("NAPIBinderUtils_h", resourceCulture);
            }
        }
    }
}
